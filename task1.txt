1. Выведите имя, фамилию, патронуса всех персонажей, у которых есть patronus и он известен

SELECT fname, lname, patronus
FROM hogwarts.characters
WHERE NOT patronus = "Unknown";

2. Выведите фамилию персонажей, у которых последняя буква в фамилии ‘e’

SELECT lname
FROM hogwarts.characters
WHERE lname LIKE "%e";

3. Посчитайте общий возраст всех персонажей и выведите это на экран

SELECT SUM(age)
FROM hogwarts.characters;

4. Выведите имя, фамилию и возраст персонажей по убыванию их возраста

SELECT fname, lname, age
FROM hogwarts.characters
WHERE age IS NOT NULL
ORDER BY age DESC;

5. Выведите имя персонажа и возраст, у которых последний находится в диапазоне от 50 до 100 лет

SELECT fname, age
FROM hogwarts.characters
WHERE age BETWEEN 50 AND 100;

6. Выведите возраст всех персонажей так, чтобы среди них не было тех, у кого он одинаковый

SELECT DISTINCT age
FROM hogwarts.characters
WHERE age IS NOT NULL;

7. Выведите всю информацию о персонажах, у которых faculty = Gryffindor и чей возраст больше 30 лет

SELECT *
FROM hogwarts.characters
WHERE (faculty = "Gryffindor") AND (age > 30);

8. Выведите имена первых трех факультетов из таблицы, так чтобы факультеты не повторялись

SELECT DISTINCT faculty
FROM hogwarts.characters
LIMIT 3;

9. Выведите имена всех персонажей, у которых имя начинается с ‘H’ и состоит из 5 букв, или чье имя начинается с ‘L’ 

SELECT fname
FROM hogwarts.characters
WHERE fname LIKE "L%" OR fname LIKE "H____";

10. Посчитайте средний возраст всех персонажей

SELECT AVG(age)
AS "Average_Age"
FROM hogwarts.characters;

11. Удалите персонажа с ID = 11

DELETE FROM hogwarts.characters
WHERE char_id = "11";

12. Выведите фамилию всех персонажей, которые содержат в ней букву ‘a’

SELECT lname
FROM hogwarts.characters
WHERE lname LIKE "%a%";

13. Используйте псевдоним для того, чтобы временно замените название столбца fname на Half-Blood Prince для реального принца-полукровки

SELECT fname
AS "Half-Blood Prince"
FROM hogwarts.characters
WHERE fname = "Severus";

14. Выведите id и имена всех патронусов в алфавитном порядки, при условии что они есть или известны

SELECT char_id, COALESCE(patronus)
FROM hogwarts.characters
WHERE NOT patronus = "Unknown"
ORDER BY patronus;

15. Используя оператор IN, выведите имя и фамилию тех персонажей, у которых фамилия Crabbe, Granger или Diggory

SELECT fname, lname
FROM hogwarts.characters
WHERE lname IN ("Crabbe", "Granger", "Diggory");

16. Выведите минимальный возраст персонажа

SELECT MIN(age)
AS "Min_Age"
FROM hogwarts.characters;

17. Используя оператор UNION выберите имена из таблицы characters и названия книг из таблицы library

SELECT fname
FROM hogwarts.characters
UNION SELECT book_name
FROM hogwarts.characters;

18. Используя оператор HAVING посчитайте количество персонажей на каждом факультете, оставив только те факультеты, где количество студентов больше 1

SELECT faculty, COUNT(char_id)
AS students
FROM hogwarts.characters
GROUP BY faculty
HAVING COUNT(faculty) > 1;

19. Используя оператор CASE опишите следующую логику:
Выведите имя и фамилию персонажа, а также следующий текстовое сообщение:

Если факультет Gryffindor, то в консоли должно вывестись Godric
Если факультет Slytherin, то в консоли должно вывестись Salazar
Если факультет Ravenclaw, то в консоли должно вывестись Rowena
Если факультет Hufflepuff, то в консоли должно вывестись Helga
Если другая информация, то выводится Muggle

Для сообщения используйте псевдоним Founders

SELECT fname, lname,
CASE
WHEN faculty = "Gryffindor" THEN "Godric"
WHEN faculty = "Slytherin" THEN "Salazar"
WHEN faculty = "Ravenclaw" THEN "Rowena"
WHEN faculty = "Hufflepuff" THEN "Helga"
ELSE "Muggle"
END AS Founders
FROM hogwarts.characters;

20. Используя регулярное выражение найдите фамилии персонажей, которые не начинаются с букв H, L или S и выведите их

SELECT lname
FROM hogwarts.characters
WHERE lname NOT REGEXP '^(H|L|S)';
